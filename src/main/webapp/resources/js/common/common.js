/***   * @Script Name : common.js * @Description : 공통 자바스크립트  * @Modification Information   * @ * @  수정일      수정자       수정내용 * @ ---------   ---------   ------------------------------- * @ 2018.12.26   황인일       최초생성 *  *  Copyright (C) 2018 by SAMSUNG SDS co.,Ltd. All right reserved. *//*** * 입력값이 null인지 체크한다 * @param objValue  * @return  true / false * @exception  */function isNull(objValue){    if(objValue != null) objValue = trim(objValue);    if(objValue == null || objValue == "") return true;    return false;}/*** * 입력값이 사용자ID인지 체크한다 * @param objValue  * @return  true / false * @exception  */function isUserID(objValue){   var bool = true;    if(objValue != null) objValue = trim(objValue);    if(objValue == null || objValue == "")        bool = false;    else    {        for (var i=0; i<objValue.length; i++)        {            ch = objValue.charCodeAt(i);            if(!( ((ch >= 0x61 && ch <= 0x7A) || (ch >= 0x40 && ch <= 0x5A)) || (ch >= 0x30 && ch <= 0x39) || ch == 0x2D || ch == 0x2E || ch == 0x5F             	  || (ch >= 0x4E00 && ch <= 0x9FFF) || (ch >= 0x3400 && ch <= 0x4DFF) || (ch >= 0x20000 && ch <= 0x2A6DF)               ))            {                bool = false;                break;            }        }    }    return bool;}/*** * 입력값이 숫자인지 체크한다(정수와 실수) * @param objValue  * @return  true / false * @exception  */function isNum(objValue){    var bool = true;    if(objValue != null) objValue = trim(objValue);    if(objValue == null || objValue == "")        bool = false;    else    {        for (var i=0; i<objValue.length; i++)        {            ch = objValue.charCodeAt(i);            if(!((ch >= 0x30 && ch <= 0x39) || ch == 0x2E ))            {                bool = false;                break;            }        }    }    /* 	       var alertMsg  = "숫자만 입력하실 수 있습니다.\t\t\n\n";    	alertMsg += "입력범위 : 0 ~ 9, .\n";    	alertMsg += "입력예시 : 0.11, 2003, 12345.67890, etc.";    	if(!bool) alert(alertMsg);    */	return bool;}/*** * 입력값이한글인지 체크한다(한글만) * @param objValue  * @return  true / false * @exception  */function isKorean(objValue){    var bool = true;        if(objValue != null) objValue = trim(objValue);    if(objValue == null || objValue == "")        bool = false;    else    {        for (var i=0; i<objValue.length; i++)        {            ch = objValue.charCodeAt(i);            //20120813 요청으로 스페이스 추가 (0x20)             if(!((ch >= 0xAC00 && ch <= 0xD7A3) || (ch >= 0x3131 && ch <= 0x314E)||(ch==0x20)))            {                bool = false;                break;            }        }    }    /*    var alertMsg  = "한글만 입력하실 수 있습니다.\t\t\n\n";    	alertMsg += "입력범위 : ㄱ ~ ㅎ, 가 ~ 힣\n";	if(!bool) alert(alertMsg);     */    	return bool;}/*** * 입력값이 한글이나 숫자인지 체크한다(한글 or 숫자) * @param objValue  * @return  true / false * @exception  */function isKoreanOrNum(objValue){	var bool = true;    if(objValue != null) objValue = trim(objValue);    if(objValue == null || objValue == "")        bool = false;    else    {        for (var i=0; i<objValue.length; i++)        {            ch = objValue.charCodeAt(i);            //20120813 요청으로 스페이스 추가 (0x20)            if(!((ch >= 0xAC00 && ch <= 0xD7A3) || (ch >= 0x3131 && ch <= 0x314E) || (ch >= 0x30 && ch <= 0x39) || (ch==0x20) ))            {                bool = false;                break;            }        }    }    /*    var alertMsg  = "한글과 숫자만 입력하실 수 있습니다.\t\t\n\n";    	alertMsg += "입력범위 : ㄱ ~ ㅎ, 가 ~ 힣, 0 ~ 9\n";     	if(!bool) alert(alertMsg);	*/    return bool;}/** *  * 입력값이 영문인지 체크한다(영문만) *  * isAlpha("abc")    = true    * isAlpha("가나다") = false * isAlpha("123")    = false *  * @param objValue  * @return  true / false * @exception  */function isAlpha(objValue){	var bool = true;    if(objValue != null) objValue = trim(objValue);    if(objValue == null || objValue == "")        bool = false;    else    {        for (var i=0; i<objValue.length; i++)        {            ch = objValue.charCodeAt(i);            if(!((ch >= 0x61 && ch <= 0x7A) || (ch >= 0x41 && ch <= 0x5A)))            {                bool = false;                break;            }        }    }    /*     var alertMsg  = "영문만 입력하실 수 있습니다.\t\n\n";    	alertMsg += "입력범위 : a ~ Z\n";    	alertMsg += "입력예시 : simple, etc.";        if(!bool) alert(alertMsg);    */    return bool;}/*** * 입력값이 영문과 숫자인지 체크한다(영문, 숫자 반드시 혼용) * @param objValue  * @return  true / false * @exception  */function isAlphaNum(objValue){    var  bool = true;    var aBool = false;    var nBool = false;    if(objValue != null) objValue = trim(objValue);    if(objValue == null || objValue == "")        bool = false;    else    {        for (var i=0; i<objValue.length; i++)        {            ch = objValue.charCodeAt(i);            if((ch >= 0x61 && ch <= 0x7A) || (ch >= 0x41 && ch <= 0x5A))            {                aBool = true;            }            else if(ch >= 0x30 && ch <= 0x39)            {                nBool = true;            }            else            {                bool = false;                break;            }        }    }    if(bool&&aBool && nBool) bool = true;    else               bool = false;    /*    var alertMsg  = "영문과 숫자만 입력하실 수 있습니다.\t\n\n";    	alertMsg += "입력범위 : a ~ Z, 0 ~ 9\n";    	alertMsg += "입력예시 : simple, 3144, etc.";        if(!bool) alert(alertMsg);    */    return bool;    }/*** * 입력값이 영문이나 숫자인지 체크한다(영문 or 숫자) * @param objValue  * @return  true / false * @exception  */function isAlphaOrNum(objValue){   var bool = true;    if(objValue != null) objValue = trim(objValue);    if(objValue == null || objValue == "")        bool = false;    else    {        for (var i=0; i<objValue.length; i++)        {            ch = objValue.charCodeAt(i);            if(!(((ch >= 0x61 && ch <= 0x7A) || (ch >= 0x41 && ch <= 0x5A)) || (ch >= 0x30 && ch <= 0x39)))            {                bool = false;                break;            }        }    }/*        var alertMsg  = "영문과 숫자만 입력하실 수 있습니다.\t\n\n";    	alertMsg += "입력범위 : a ~ Z, 0 ~ 9\n";    	alertMsg += "입력예시 : simple, 3144, etc.";    if(!bool) alert(alertMsg);    */    return bool;}/*** * 입력값이 숫자인지 체크한다(정수) * @param objValue  * @return  true / false * @exception  */function isInteger(objValue){    var bool = true;    if(objValue != null) objValue = trim(objValue);    if(objValue == null || objValue == "")        bool = false;    else    {        for (var i=0; i<objValue.length; i++)        {            ch = objValue.charCodeAt(i);            if(!(ch >= 0x30 && ch <= 0x39))            {                bool = false;                break;            }        }    }    /*    var alertMsg  = "정수만 입력하실 수 있습니다.\t\t\n\n";    	alertMsg += "입력범위 : 0 ~ 9\n";    	alertMsg += "입력예시 : 011, 2003, 1234567890, etc.";            if(!bool) alert(alertMsg);     */    return bool;}/*** * 입력값이 전화번호인지 체크한다 * @param objValue  * @return  true / false * @exception  */function isTelNum(objValue){    var bool = true;    if(objValue != null) objValue = trim(objValue);    if(objValue == null || objValue == "")        bool = false;    else    {        for (var i=0; i<objValue.length; i++)        {            ch = objValue.charCodeAt(i);            if(!((ch >= 0x30 && ch <= 0x39) || ch == 0x28 || ch == 0x29 || ch == 0x2D))            {                bool = false;                break;            }        }    }	/*var alertMsg  = "숫자와 -, ( )만 입력하실 수 있습니다.\t\t\n\n";		alertMsg += "입력범위 : 0 ~ 9, -, (, )\n";		alertMsg += "입력예시 : 02-000-0000, (02)000-0000, etc.";	if(!bool) alert(alertMsg);   */	return bool;}/*** * 주민등록번호(13자리)를 체크한다 * @param objValue  * @return  true / false * @exception  */function isValidSSN(objValue){    objValue = trim(objValue);    var year   = objValue.substring(0,2);    var month  = objValue.substring(2,4);    var day    = objValue.substring(4,6);    var sex    = objValue.substring(6,7);    var result = false;        if     (sex=="1" || sex=="2")        year="19"+year;    else if(sex=="3" || sex=="4")        year="20"+year;    if(isValidMonth(month) && isValidDay(year, month, day))    {        var check   = 0;        var frontNo = objValue.substring(0, 6);        var rearNo  = objValue.substring(6,13);        for(var i=0; i<= 5; i++)            check = check + (( i % 8 + 2 )* parseInt(frontNo.substring(i,i+1)));        for(var i=6; i<=11; i++)            check = check + (( i % 8 + 2 )* parseInt(rearNo.substring(i-6,i-5)));        check = 11 - (check % 11);        check = check % 10;        if(check == parseInt(objValue.substring(12,13)))            result=true;    }    var alertMsg  = "주민등록번호 형식이 올바르지 않습니다.";	if(!result) alert(alertMsg);        return result;}/*** * 입력값이 URL인지 체크한다 * @param objValue  * @return  true / false * @exception  */function isURL(objValue){    var bool = true;    if(objValue != null) objValue = trim(objValue);    if(objValue == null || objValue == "")        bool = false;    else    {        for (var i=0; i<objValue.length; i++)        {            ch = objValue.charCodeAt(i);            if(!(((ch >= 0x61 && ch <= 0x7A) || (ch >= 0x41 && ch <= 0x5A)) || (ch >= 0x2E && ch <= 0x3A) || ch == 0x26 || ch == 0x3D || ch == 0x3F || ch == 0x5F))            {                bool = false;                break;            }        }    }/*    var alertMsg  = "URL 형식만 입력하실 수 있습니다.\t\t\n\n";    	alertMsg += "입력범위 : 0 ~ 9, a ~ Z, ., =, /, ?, &, _ \n";    	alertMsg += "입력예시 : http://www.shilladfs.com, etc.";	if(!bool) alert(alertMsg);   */    return bool;}/*** * 입력값이 특정 문자(chars)인지 체크한다 *  * isContainsCharsOnly("1"  , "1") = true * isContainsCharsOnly("123", "1") = false *  * @param objValue, chars * @return  true / false * @exception  */function isContainsCharsOnly(objValue, chars){    if(objValue != null) objValue = trim(objValue);    for (var inx=0; inx<objValue.length; inx++)        if (chars.indexOf(objValue.charAt(inx)) == -1) return false;    return true;}/* =========================  *                            *     String 관련 함수      *                            * ========================= *//*** * 입력받은 문자열의 왼쪽 공백을 제거한다.  * @param str : 문자열 * @return str : 문자열 * @exception  */function ltrim(str){	while (1)	{		if ( str.substring(0, 1) == " " )		{			str = str.substring(1, str.length);		}		else if (str.charCodeAt(0)	==	13	&&	str.charCodeAt(1)	==	10)		{			str = str.substring(2, str.length);		}		else		{			break;		}	}	return str;}/*** * 입력받은 문자열의 오른쪽 공백을 제거한다.  * @param str : 문자열 * @return str : 문자열 * @exception  */function rtrim( str ){	while (1)	{		if ( str.substring(str.length - 1, str.length) == " " )		{			str = str.substring(0, str.length - 1);		}		else if (str.charCodeAt(0)	==	13	&&	str.charCodeAt(1)	==	10)		{			str = str.substring(0, str.length - 2);		}		else		{			break;		}	}	return str;}/*** * 입력받은 문자열의 공백을 제거한다.  * @param str : 문자열 * @return str : 문자열 * @exception  */function trim(str) {	var tmpstr = ltrim(str);	return rtrim(tmpstr);}/*** * 바이트 수를 계산한다(한글은 자당 2bytes로 계산한다) * @param 	string * @return 	length * @exception  */function getByteLength(s){    var len = 0;    if(s == null) return 0;    for(var i=0; i<s.length; i++)    {        var c = escape(s.charAt(i));        if(c.length == 1) len ++;        else if (c.indexOf("%u") != -1) len += 2;        else if (c.indexOf("%")  != -1) len += c.length/3;    }    return len;}/*** * 스트링이 해당 포맷과 일치하는지 체크 * * ex) chkFormat('2012-10-12','####-##-##') return true *  * @param 	string, format * @return 	boolean * @exception  */function chkFormat(string, format){    if(string.length != format.length){    	    	return false;    }else{    	    	for(var i=0; i<format.length; i++){    		     		if(format.charAt(i) != "#"){    			if(format.charAt(i) != string.charAt(i) ){    				    				return false;    			}            }    	}    }        return true;}/*** * 스트링을 원하는 포맷의 문자열로 만들어 준다 * * ex) RecieptNumber = formatter("535000020060000012", "#######-####-#######"); *     결과 : 5350000-2006-0000012 *  * @param 	string, format * @return 	formated string * @exception  */function formatter(string, format){    if(string.length < 1){    	return string;    }else if(chkFormat(string, format)){    	    	return string;    }    	var returnStr = "";    strLen = trim(string).length;    fmtLen = countChar(trim(format), "#");    if(strLen == fmtLen)    {        var cntChr    = 0;        for(var i=0; i<format.length; i++)        {            if(format.charAt(i) == "#")            {                returnStr += string.charAt(cntChr);                cntChr++;            }            else                returnStr += format.charAt(i);        }    }    else{    	return string;    }        //alert("String과 Format의 크기가 다릅니다.\n"+format+"\n");    return returnStr;}/*** * 주어진 길이보다 길이가 작은 문자열 앞에 "0"을 붙여 패딩한다 *  * paddingZero(any, 5) = 00aaa   *  *  * @param 	string, int * @return 	string * @exception  */function paddingZero(str, len){    if(!isNaN(str)) str + "";    var strLen = str.length;    var cab = 0;    var tmp = "";    if (strLen >= len)        return str;    else        cab = len - strLen;    for (var ii=0; ii<cab; ii++)        tmp = "0" + tmp;    return tmp + str;}/*** * 주어진 길이보다 길이가 작은 문자열 뒤에 "0"을 붙여 패딩한다 * @param 	string, int * @return 	string * @exception  */function paddingZeroBack(str, len){    if(!isNaN(str)) str + "";    var strLen = str.length;    var cab = 0;    var tmp = "";    if (strLen >= len)        return str;    else        cab = len - strLen;    for (var ii=0; ii<cab; ii++)        tmp = "0" + tmp;    return str + tmp;}/*** * 단어 맨 뒷글자의 받침 유무를 검사하여 적당한 접미사를 찾아준다 *  * ex) stn = changeFinalPattern("가감", "을를"); * 결과 : 가감을 *  * @param 	string, string * @return 	string * @exception  */function changeFinalPattern(strnt, suffix){    if(strnt == " ")        return "";    var rv = "";    var lastNum = strnt.substring(strnt.length-1);    if(lastNum == "0" || lastNum == "1" || lastNum == "3" || lastNum == "6" || lastNum == "7" || lastNum == "8")        return trim(strnt + suffix.charAt(0));    else if(lastNum == "2" || lastNum == "4" || lastNum == "5" || lastNum == "9")        rv = trim(strnt + suffix.charAt(1));    else    {        rv = "";        var ch = escape(strnt.charAt(strnt.length-1)).replace("%u", "0x");        var ox = eval("((ch - 0xAC00) % (0x15 * 0x1C)) % 0x1C");        if(ox > 0)            rv = trim(strnt + suffix.charAt(0));        else            rv = trim(strnt + suffix.charAt(1));    }    return rv;}/** 스트링에서 특정 Character의 갯수를 센다 * * ex) cntChr = countChar("#######-####-#######", "#"); *     결과 : 18 * * @param : string, character * @return    : count */function countChar(str, chr){    var cntChr = 0;    for(var i=0; i<str.length; i++)    {        if(str.charAt(i) == chr)            cntChr++;    }    return cntChr;}/* =========================  *                            *     Focus 관련 함수      *                            * ========================= *//** * 특정 문자만 입력가능하도록 처리하는 함수 * * @param : obj * @return : */function checkTypes(obj){        keynum = event.keyCode;        switch(obj.getAttribute("types"))        {            case "DATE":    // 날짜            case "DATEP":   // 날짜(미래날짜 입력불가)            case "DATETIME":// 일시            case "TIME":    // 시간            case "CURR":    // 통화            case "NUMB":    // 숫자                obj.style.imeMode = "disabled";                if(!(keynum >= 0x30 && keynum <= 0x39))                {                    obj.focus();                    event.returnValue = false;                }                else return true;                break;            case "USER":    // 사용자ID                obj.style.imeMode = "active";                if(!( ((keynum >= 0x61 && keynum <= 0x7A) || (keynum >= 0x40 && keynum <= 0x5A)) || (keynum >= 0x30 && keynum <= 0x39) || keynum == 0x2D || keynum == 0x2E || keynum == 0x5F                   	  || (keynum >= 0x4E00 && keynum <= 0x9FFF) || (keynum >= 0x3400 && keynum <= 0x4DFF) || (keynum >= 0x20000 && keynum <= 0x2A6DF)                  ))                {                    obj.focus();                    event.returnValue = false;                }                else return true;                break;                       case "TELNO":   // 전화번호                obj.style.imeMode = "disabled";                if(!((keynum >= 0x30 && keynum <= 0x39) || keynum == 0x28 || keynum == 0x29 || keynum == 0x2D))                {                    obj.focus();                    event.returnValue = false;                }                else return true;                break;            case "HCHR":    // 한글            case "CHAR":    // 한글                obj.style.imeMode = "active";                if(!((keynum >= 0xAC00 && keynum <= 0xD7A3) || (keynum >= 0x3131 && keynum <= 0x314E)))                {                    obj.focus();                    event.returnValue = false;                }                else return true;                break;            case "HCNO":    // 한글 또는 숫자                obj.style.imeMode = "active";                if(!((keynum >= 0xAC00 && keynum <= 0xD7A3) || (keynum >= 0x3131 && keynum <= 0x314E) || (keynum >= 0x30 && keynum <= 0x39)))                {                    obj.focus();                    event.returnValue = false;                }                else return true;                break;            case "ECHR":    // 영문                obj.style.imeMode = "disabled";                if(!((keynum >= 0x61 && keynum <= 0x7A) || (keynum >= 0x41 && keynum <= 0x5A)))                {                    obj.focus();                    event.returnValue=false;                }                else return true;                break;            case "CECHR":    // 영문(대문자) 또는 공백                obj.style.imeMode = "disabled";				if(!(((keynum >= 0x61 && keynum <= 0x7A) || (keynum >= 0x41 && keynum <= 0x5A)) || keynum == 0x20 ))                            {                    obj.focus();                    event.returnValue=false;                }				else return true;                break;                case "ECNO":    // 영문 또는 숫자                obj.style.imeMode = "disabled";                if(!(((keynum >= 0x61 && keynum <= 0x7A) || (keynum >= 0x41 && keynum <= 0x5A)) || (keynum >= 0x30 && keynum <= 0x39)))                {                    obj.focus();                    event.returnValue=false;                }                else return true;                break;            case "HNCH":                if(keynum != 229 && keynum != 8 && keynum !=9 && keynum != 35 && keynum != 36 && keynum != 37 && keynum != 39 && keynum != 46 && (keynum < 48 || keynum > 57) )                {                    obj.focus();                    event.returnValue = false;                }                else return true;                break;            case "NOTQ":                if(keynum == 220 || keynum == 222 )                {                    obj.focus();                    event.returnValue=false;                }                else return true;                break;            case "URL" :    // 영문, 숫자, ?./=_&:                obj.style.imeMode = "disabled";                if(!(((keynum >= 0x61 && keynum <= 0x7A) || (keynum >= 0x41 && keynum <= 0x5A)) || (keynum >= 0x2E && keynum <= 0x3A) || keynum == 0x26 || keynum == 0x3D || keynum == 0x3F || keynum == 0x5F))                {                    obj.focus();                    event.returnValue=false;                }                else return true;                break;            case "HNSP":    // 한글, 숫자, ", .,()-Space                obj.style.imeMode = "active";                if(!((keynum >= 0xAC00 && keynum <= 0xD7A3) || (keynum >= 0x3131 && keynum <= 0x314E) || (keynum >= 0x30 && keynum <= 0x39) || keynum == 0x20 || keynum == 0x22 || keynum == 0x28 || keynum == 0x29 || (keynum >= 0x2C && keynum <= 0x2E)))                {                    obj.focus();                    event.returnValue = false;                }                else return true;                break;            case "HNSPS":    // 한글, 숫자, ", .,()-Space, '                obj.style.imeMode = "active";                 if(!((keynum >= 0xAC00 && keynum <= 0xD7A3) || (keynum >= 0x3131 && keynum <= 0x314E) || (keynum >= 0x30 && keynum <= 0x39) || keynum == 0x20 || keynum == 0x22 || keynum == 0x27 || keynum == 0x28 || keynum == 0x29 || (keynum >= 0x2C && keynum <= 0x2E)))                {                    obj.focus();                    event.returnValue = false;                }                else return true;                break;             case "RCHR":    // 한글, . //도로명을 위한 types                obj.style.imeMode = "active";                if(!((keynum >= 0xAC00 && keynum <= 0xD7A3) || (keynum >= 0x3131 && keynum <= 0x314E)|| (keynum >= 0x30 && keynum <= 0x39)|| keynum == 0x2E))                {                    obj.focus();                    event.returnValue = false;                }                else return true;                break;        }}/** * 입력받은 row의 색을 변환 * * @param : object */function changeRowColor(obj){    try    {        selectedEle = obj;        selectedEle.style.background = "CBE7BA";    }    catch(e)    {        e.addLocation("changeRowColor", "resources/lib/validation/common.js");        throw e;    }}/*** * frm을 입력받아 암호화하여 submit한다.  * @param frm  * @return   * @exception  */function encSubmit(frm){	try	{		if (EncForm(frm)) {			//서버로 submit			frm.submit();	        return false;	    } else {	        alert("보안상 문제가 생겨 전송이 취소 되었습니다.");	    }	}	catch(e)	{		e.addLocation("submit", "resources/lib/validation/common.js");        throw e;	}}/*** * ajax용 암호화  * @param frm  * @return   * @exception  */function ajaxEnc(frm, array1, array2){	var chkValue;	var tmpEl = new Array();	var tmpElValue = new Array();	var k = 0;	for (var i = 0; i < array1.length; i++ )	{		chkValue = 0;		for (var j = 0; j < frm.elements.length; j++ ) 	    {				if(frm.elements[j].getAttribute("NAME")==array1[i]&&chkValue==0)			{				tmpEl[k]     = j;				tmpElValue[k] = frm.elements[j].value;				frm.elements[j].value = array2[i];				chkValue = 1;				k += 1;			}				    }		if(chkValue==0)		{			var obj = document.createElement("<input type='text' name='"+array1[i] +"' value='"+ array2[i]   +"'>");			frm.appendChild(obj);		}	}	if(EncForm2(frm, frm))	{		for (var l = 0; l < tmpElValue.length; l++ )		{			frm.elements[tmpEl[l]].value                = tmpElValue[l]; 		}		return true;	}}/* 입력값이 Array인지 일반 string인지 체크한다** Parameter : array string* Return    : boolean*/function checkArray(array){   try   {       if(array[0]) return true;   }   catch(e)   {       return false;   }}/* 스트링에서 특정 Character의 갯수를 센다** ex) cntChr = countChar("#######-####-#######", "#");*     결과 : 18** Parameter : string, character* Return    : count*/function countChar(str, chr){   try   {       var cntChr = 0;       for(i=0; i<str.length; i++)       {           if(str.charAt(i) == chr)               cntChr++;       }       return cntChr;   }   catch(e)   {       e.addLocation("countChar", "resources/lib/validation/common.js");       throw e;   }}/* 단어 맨 뒷글자의 받침 유무를 검사하여 적당한 접미사를 찾아준다** ex) stn = checkFinalPattern("가감", "을를");*     결과 : 가감을** Parameter : string, string* Return    : string*/function changeFinalPattern(strnt, suffix){   try   {       if(strnt == " ")           return "";       var lastNum = strnt.substring(strnt.length-1);       if(lastNum == "0" || lastNum == "1" || lastNum == "3" || lastNum == "6" || lastNum == "7" || lastNum == "8")           return trim(strnt + suffix.charAt(0));       else if(lastNum == "2" || lastNum == "4" || lastNum == "5" || lastNum == "9")           rv = trim(strnt + suffix.charAt(1));       else       {           var rv = "";           var ch = escape(strnt.charAt(strnt.length-1)).replace("%u", "0x");           var ox = eval("((ch - 0xAC00) % (0x15 * 0x1C)) % 0x1C");           if(ox > 0)               rv = trim(strnt + suffix.charAt(0));           else               rv = trim(strnt + suffix.charAt(1));       }       return rv;   }   catch(e)   {       e.addLocation("countChar", "resources/lib/validation/common.js");       throw e;   }}/* 특수문자를 웹 브라우저에서 정상적으로 보이기 위해 특수문자를 처리한다. ( <, >, &,@,/)** Parameter : string* Return    : string*/function replaceXss(str){   try   {	   	var tmpString = str;			var rtnStr = null;				/*		tmpString = tmpString.replace(/</g, "&lt;");   		tmpString = tmpString.replace(/>/g, "&gt;");   		tmpString = tmpString.replace(/&/g, "&amp;");  		tmpString = tmpString.replace(/ /g, "&nbsp;"); 		tmpString = tmpString.replace(/\'/g, "&apos;"); 		tmpString = tmpString.replace(/\"/g, "&quot;"); 		*/				tmpString = tmpString.replace("&#60;","<");		tmpString = tmpString.replace("&#62;",">");		tmpString = tmpString.replace("&#64;","@");		tmpString = tmpString.replace("&#47;","/");		tmpString = tmpString.replace("&#38;","&");				rtnStr = tmpString;		return rtnStr;   }   catch(e)   {       e.addLocation("replaceXss", "resources/lib/validation/common.js");       throw e;   }}// input에서 Enter key 를 눌러서 Submit이 발생하는 것을 방지.// 단, textarea는 제외document.onkeypress = CancelEnterKey;function CancelEnterKey(e) {	var keyCode = getKeyCode(e);	var tagType = getTagType(e);		if ((keyCode == 13) && (tagType == "text" || tagType == "checkbox" || tagType == "radio" || tagType == null)) {		if(getAttributeValue(e, "submit") == "Y")			return;		return false; 	}}function getKeyCode(e) {	var keyCode; 	if(window.event)		keyCode = window.event.keyCode;	else if(e)		keyCode = e.which;	 	return keyCode;}function getTagType(e) {	var tagType; 	if(e)		tagType = e.target.type;	else		tagType = event.srcElement.type;	 	return tagType;}function getAttributeValue(e, attr) {	var val; 	if(window.event) {		val = eval('event.srcElement.getAttribute("' + attr + '")');	}	else {		val = eval('e.target.getAttribute("' + attr + '")');	}	return val;}/** CTRL Key와 Backspace, F5 Key를 막는다.*/document.onkeydown  = checkKeys;function checkKeys(e) {	try {		var keyCode = getKeyCode(e);		var tagType = getTagType(e);		var readonly = false;				if(getAttributeValue(e, "readonly") == true || getAttributeValue(e, "readonly") == 'readonly')            readonly = true;				// readonly 속성일때 백스페이 이벤트 동작 방지		if(keyCode == 8 && readonly == true) {			if(window.event) {				event.keyCode      = 0;				event.cancelBubble = true;				event.returnValue  = false;			} else if(e) {				return false;			}		}		// Control Key		if(keyCode == 17) {			//event.cancelBubble = true;			//event.returnValue  = false;		}		// BackSpace(8) 금지		else if((keyCode == 8) && !(tagType == 'text' || tagType == 'textarea' || tagType == 'password')) {			if(window.event) {				event.keyCode      = 0;				event.cancelBubble = true;				event.returnValue  = false;			} else if(e) {				return false;			}					}		// F5(116) 금지		else if((keyCode == 116)) {			if(window.event) {				event.keyCode      = 0;				event.cancelBubble = true;				event.returnValue  = false;			} else if(e) {				return false;			}       }   }   catch(e)   {       e.addLocation("checkKeys", "resources/lib/validation/common.js");       throw e;   }}